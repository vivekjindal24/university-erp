# Generated by Django 4.2.7 on 2025-10-01 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        ('faculty', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('academic_year', models.CharField(max_length=9)),
                ('semester', models.CharField(max_length=10)),
                ('exam_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('total_marks', models.PositiveIntegerField()),
                ('passing_marks', models.PositiveIntegerField()),
                ('room_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='scheduled', max_length=20)),
                ('instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='students.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('weightage_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.CharField(blank=True, max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('appeared', 'Appeared'), ('absent', 'Absent'), ('disqualified', 'Disqualified')], default='registered', max_length=20)),
                ('attendance_marked_at', models.DateTimeField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.enrollment')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_registrations', to='exams.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_exams', to='students.student')),
            ],
            options={
                'unique_together': {('student', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='QuestionBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('short_answer', 'Short Answer'), ('long_answer', 'Long Answer'), ('true_false', 'True/False'), ('fill_blank', 'Fill in the Blank'), ('numerical', 'Numerical'), ('essay', 'Essay')], max_length=20)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=10)),
                ('marks', models.PositiveIntegerField()),
                ('option_a', models.TextField(blank=True)),
                ('option_b', models.TextField(blank=True)),
                ('option_c', models.TextField(blank=True)),
                ('option_d', models.TextField(blank=True)),
                ('correct_answer', models.TextField()),
                ('explanation', models.TextField(blank=True)),
                ('topic', models.CharField(blank=True, max_length=100)),
                ('chapter', models.CharField(blank=True, max_length=100)),
                ('learning_outcome', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_bank', to='students.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='GradingRubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(max_length=200)),
                ('excellent_description', models.TextField()),
                ('good_description', models.TextField()),
                ('average_description', models.TextField()),
                ('poor_description', models.TextField()),
                ('excellent_marks', models.DecimalField(decimal_places=2, max_digits=4)),
                ('good_marks', models.DecimalField(decimal_places=2, max_digits=4)),
                ('average_marks', models.DecimalField(decimal_places=2, max_digits=4)),
                ('poor_marks', models.DecimalField(decimal_places=2, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubrics', to='exams.questionbank')),
            ],
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=6)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade', models.CharField(max_length=5)),
                ('grade_points', models.DecimalField(decimal_places=2, max_digits=4)),
                ('is_passed', models.BooleanField()),
                ('rank_in_class', models.PositiveIntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('graded', 'Graded'), ('published', 'Published'), ('under_review', 'Under Review')], default='pending', max_length=20)),
                ('graded_at', models.DateTimeField()),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
                ('student_exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='exams.studentexam')),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.PositiveIntegerField()),
                ('marks_allocated', models.PositiveIntegerField()),
                ('is_mandatory', models.BooleanField(default=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_questions', to='exams.exam')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.questionbank')),
            ],
            options={
                'ordering': ['question_number'],
                'unique_together': {('exam', 'question_number')},
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.examtype'),
        ),
        migrations.AddField(
            model_name='exam',
            name='invigilator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invigilated_exams', to='faculty.faculty'),
        ),
        migrations.CreateModel(
            name='AnswerSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_file', models.FileField(blank=True, null=True, upload_to='answer_sheets/')),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('auto_save_data', models.JSONField(blank=True, default=dict)),
                ('plagiarism_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer_sheet', to='exams.studentexam')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True)),
                ('selected_option', models.CharField(blank=True, max_length=1)),
                ('marks_awarded', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('grader_comments', models.TextField(blank=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('answer_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_answers', to='exams.answersheet')),
                ('exam_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.examquestion')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
            ],
            options={
                'unique_together': {('answer_sheet', 'exam_question')},
            },
        ),
    ]
