# Generated by Django 4.2.7 on 2025-10-01 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        ('faculty', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('employee_type', models.CharField(choices=[('faculty', 'Faculty'), ('administrative', 'Administrative Staff'), ('technical', 'Technical Staff'), ('support', 'Support Staff'), ('contractual', 'Contractual')], max_length=20)),
                ('designation', models.CharField(max_length=100)),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('on_leave', 'On Leave'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('retired', 'Retired')], default='active', max_length=20)),
                ('hire_date', models.DateField()),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('probation_period_months', models.PositiveIntegerField(default=6)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank_account_number', models.CharField(blank=True, max_length=20)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('bank_ifsc', models.CharField(blank=True, max_length=11)),
                ('pan_number', models.CharField(blank=True, max_length=10)),
                ('aadhar_number', models.CharField(blank=True, max_length=12)),
                ('pf_number', models.CharField(blank=True, max_length=20)),
                ('esi_number', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='students.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=9)),
                ('semester', models.PositiveIntegerField()),
                ('tuition_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('admission_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('development_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('laboratory_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('library_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sports_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('examination_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('hostel_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('miscellaneous_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('late_fee_penalty', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('due_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='students.program')),
            ],
            options={
                'unique_together': {('program', 'academic_year', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='FinanceAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_code', models.CharField(max_length=20, unique=True)),
                ('account_name', models.CharField(max_length=200)),
                ('account_type', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('revenue', 'Revenue'), ('expense', 'Expense')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backoffice.financeaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hostel_type', models.CharField(choices=[('boys', 'Boys Hostel'), ('girls', 'Girls Hostel'), ('mixed', 'Mixed Hostel')], max_length=10)),
                ('address', models.TextField()),
                ('total_rooms', models.PositiveIntegerField()),
                ('occupied_rooms', models.PositiveIntegerField(default=0)),
                ('facilities', models.TextField(blank=True)),
                ('rules_regulations', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('warden', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='faculty.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=300)),
                ('author', models.CharField(max_length=200)),
                ('publisher', models.CharField(max_length=200)),
                ('publication_year', models.PositiveIntegerField()),
                ('edition', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('language', models.CharField(default='English', max_length=50)),
                ('pages', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('rack_number', models.CharField(max_length=20)),
                ('quantity_total', models.PositiveIntegerField()),
                ('quantity_available', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('issued', 'Issued'), ('reserved', 'Reserved'), ('damaged', 'Damaged'), ('lost', 'Lost'), ('under_repair', 'Under Repair')], default='available', max_length=20)),
                ('purchase_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='book_covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=20, unique=True)),
                ('transaction_type', models.CharField(choices=[('fee_payment', 'Fee Payment'), ('salary_payment', 'Salary Payment'), ('purchase', 'Purchase'), ('sale', 'Sale'), ('expense', 'Expense'), ('income', 'Income'), ('transfer', 'Transfer'), ('adjustment', 'Adjustment')], max_length=20)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_date', models.DateField()),
                ('reference_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='backoffice.financeaccount')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backoffice.employee')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('online', 'Online'), ('bank_transfer', 'Bank Transfer'), ('demand_draft', 'Demand Draft')], max_length=20)),
                ('transaction_reference', models.CharField(blank=True, max_length=100)),
                ('late_fee_applied', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('waived', 'Waived')], default='pending', max_length=20)),
                ('remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fee_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.feestructure')),
                ('processed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_payments', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=20, unique=True)),
                ('item_name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('furniture', 'Furniture'), ('electronics', 'Electronics'), ('laboratory', 'Laboratory Equipment'), ('sports', 'Sports Equipment'), ('books', 'Books'), ('stationery', 'Stationery'), ('maintenance', 'Maintenance Supplies'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('purchase_date', models.DateField()),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vendor', models.CharField(blank=True, max_length=200)),
                ('warranty_period_months', models.PositiveIntegerField(default=0)),
                ('warranty_expiry_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('available', 'Available'), ('in_use', 'In Use'), ('maintenance', 'Under Maintenance'), ('damaged', 'Damaged'), ('disposed', 'Disposed')], default='available', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Inventories',
            },
        ),
        migrations.CreateModel(
            name='HostelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=20)),
                ('floor', models.PositiveIntegerField()),
                ('room_type', models.CharField(choices=[('single', 'Single Occupancy'), ('double', 'Double Occupancy'), ('triple', 'Triple Occupancy'), ('quad', 'Quad Occupancy')], max_length=10)),
                ('capacity', models.PositiveIntegerField()),
                ('current_occupancy', models.PositiveIntegerField(default=0)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=8)),
                ('facilities', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Under Maintenance'), ('reserved', 'Reserved')], default='available', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hostel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='backoffice.hostel')),
            ],
            options={
                'unique_together': {('hostel', 'room_number')},
            },
        ),
        migrations.CreateModel(
            name='HostelAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_date', models.DateField()),
                ('checkout_date', models.DateField(blank=True, null=True)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=8)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('allocated', 'Allocated'), ('vacated', 'Vacated'), ('transferred', 'Transferred'), ('suspended', 'Suspended')], default='allocated', max_length=20)),
                ('guardian_consent', models.BooleanField(default=False)),
                ('emergency_contact', models.CharField(max_length=15)),
                ('medical_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='backoffice.hostelroom')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hostel_allocations', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='BookIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('fine_amount', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('status', models.CharField(choices=[('issued', 'Issued'), ('returned', 'Returned'), ('overdue', 'Overdue'), ('lost', 'Lost'), ('damaged', 'Damaged')], default='issued', max_length=20)),
                ('remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='backoffice.librarybook')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='book_issues', to='faculty.faculty')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_books', to=settings.AUTH_USER_MODEL)),
                ('returned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='returned_books', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='book_issues', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_period_start', models.DateField()),
                ('pay_period_end', models.DateField()),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('house_rent_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('medical_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('special_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('provident_fund', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('esi_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('loan_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_deductions', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('days_worked', models.PositiveIntegerField()),
                ('days_absent', models.PositiveIntegerField(default=0)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to='backoffice.employee')),
                ('processed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('employee', 'pay_period_start', 'pay_period_end')},
            },
        ),
    ]
